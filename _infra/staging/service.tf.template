terraform {
  backend "s3" {
    bucket = "doordash-cluster-state"
    dynamodb_table = "doordash-cluster-state"
    key    = "resources/services/staging/_GITREPO_/service.tfstate"
    region = "us-west-2"
  }
}

module "service" {
  source = "git::ssh://git@github.com/doordash/terraform-kubernetes-microservice.git?ref=master"

  namespace                 = var.namespace
  service_name              = var.service_name
  service_app               = "web"
  service_contact_info      = "eng-devprod@doordash.com"
  service_docker_image      = "611706558220.dkr.ecr.us-west-2.amazonaws.com/${var.service_name}"
  service_docker_image_tag  = var.image_tag
  runtime_enable            = "true"
  service_cmd               = "/home/app/entrypoint.sh"
  service_cmd_args          = "/home/app/run.sh"
  service_replica_count     = "1"
  service_pdb_enable        = "true"

  service_container_port = "80"
  net_service_port = "80"

  helm_timeout = "0"
  blue_green_enable = "true"
  blue_green_first_deployment = var.blue_green_first_deployment
  blue_green_scale_down_delay_seconds = "600"

  enable_topology_spread = "true"

  service_hpa_enable                        = "true"
  service_hpa_min_replicas                  = "10"
  service_hpa_max_replicas                  = "15"
  service_hpa_cpu_target_avg_util           = "27"

  service_resource_requests_memory = "256Mi"
  service_resource_limits_memory = "256Mi"
  service_resource_requests_cpu = "100m"
  service_resource_limits_cpu = "100m"
  service_readiness_probe_path = "/health"

  service_iam_role = "arn:aws:iam::914801092467:role/web.${var.namespace}"

  service_dns_config_options = <<EOF
    ndots=4
  EOF

  service_environments_variables = <<EOF
    GIT_SHA=${var.image_tag}
    ENVIRONMENT=staging
   EOF

  service_custom_pod_annotations = <<EOF
    chronosphere.io/job: "service-template"
    chronosphere.io/scrape: "true"
    chronosphere.io/port: "80"
    chronosphere.io/path: "/metrics"
    # Update the following once you have requested the index
    doordash.com/logging-index: index-not-sent-to-splunk
  EOF

}

module "worker" {
  source = "git::ssh://git@github.com/doordash/terraform-kubernetes-microservice.git?ref=master"

  namespace                 = var.namespace
  service_name              = var.service_name
  service_app               = "worker"
  service_contact_info      = "eng-devprod@doordash.com"
  service_docker_image      = "611706558220.dkr.ecr.us-west-2.amazonaws.com/${var.service_name}"
  service_docker_image_tag  = var.image_tag
  runtime_enable            = "true"
  service_cmd               = "/home/app/entrypoint.sh"
  service_cmd_args          = "/home/app/run.sh"
  service_replica_count     = "2"
  service_pdb_enable        = "true"

  helm_timeout = "0"
  blue_green_enable = "false"
  net_service_enable = "false"

  enable_topology_spread = "true"

  service_hpa_enable                        = "true"
  service_hpa_min_replicas                  = "10"
  service_hpa_max_replicas                  = "15"
  service_hpa_cpu_target_avg_util           = "27"

  service_resource_requests_memory = "256Mi"
  service_resource_limits_memory = "256Mi"
  service_resource_requests_cpu = "100m"
  service_resource_limits_cpu = "100m"

  service_iam_role = "arn:aws:iam::914801092467:role/worker.${var.namespace}"

  service_environments_variables = <<EOF
    GIT_SHA=${var.image_tag}
    ENVIRONMENT=staging
   EOF

  service_custom_pod_annotations = <<EOF
    # Update the following once you have requested the index
    doordash.com/logging-index: index-not-sent-to-splunk
   EOF
}

module "cronjob" {
  source = "git::ssh://git@github.com/doordash/terraform-kubernetes-microservice.git?ref=master"

  namespace                 = var.namespace
  service_name              = var.service_name
  service_app               = "cronjob"
  service_contact_info      = "eng-devprod@doordash.com"
  service_docker_image      = "611706558220.dkr.ecr.us-west-2.amazonaws.com/${var.service_name}"
  service_docker_image_tag  = var.image_tag
  runtime_enable            = "false"
  service_cmd               = "/home/app/entrypoint.sh"
  service_cmd_args          = "/home/app/run-job.sh"
  service_pdb_enable        = "true"

  enable_topology_spread = "true"

  helm_timeout = "0"
  job_enable = "true"
  job_cron_schedule = "* * * * *"

  service_resource_requests_memory = "256Mi"
  service_resource_limits_memory = "256Mi"
  service_resource_requests_cpu = "100m"
  service_resource_limits_cpu = "100m"

  service_iam_role = "arn:aws:iam::914801092467:role/cronjob.${var.namespace}"

  service_environments_variables = <<EOF
    GIT_SHA=${var.image_tag}
    ENVIRONMENT=staging
    JOB_NAME=${var.job_name}
   EOF
}
