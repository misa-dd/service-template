@Library('common-pipelines@v9.0.33') _

def common
docker = new org.doordash.Docker()
github = new org.doordash.Github()
os = new org.doordash.Os()

// -----------------------------------------------------------------------------------
// The following params are automatically provided by the callback gateway as inputs
// to the Jenkins pipeline that starts this job.
//
// params["SHA"]                    - Sha used to start the pipeline
// params["BRANCH_NAME"]            - Name of GitHub branch the SHA is associated with
// params["UNIQUE_BUILD_ID"]        - A randomly generated unique ID for this job run
// params["ENQUEUED_AT_TIMESTAMP"]  - Unix timestamp generated by callback gateway
// params["JSON"]                   - Extensible json doc with extra information
// params["GITHUB_REPOSITORY"]      - GitHub ssh url of repository (git://....)
// -----------------------------------------------------------------------------------

serviceId = github.describeGitUrlParts(params["GITHUB_REPOSITORY"])["repository"]

stage('Startup') {
  curlSlave {
    os.deleteDirContentsAsRoot()
    github.fastCheckoutScm(params["GITHUB_REPOSITORY"], params["SHA"])
    common = (new org.doordash.PipelineHelper()).loadLocalFile("Jenkinsfile-common.groovy")
    github.sendStatusToGitHub(
      params["SHA"],
      params["GITHUB_REPOSITORY"],
      "Started.",
      "Start Jenkinsfile-deploy Pipeline",
      "${BUILD_URL}console"
    )
  }
}

common.buildImages(params["GITHUB_REPOSITORY"], params["SHA"], serviceId)

common.runTests(params["GITHUB_REPOSITORY"], params["SHA"], serviceId)
